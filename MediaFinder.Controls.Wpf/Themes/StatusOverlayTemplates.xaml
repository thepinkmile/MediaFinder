<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MediaFinder.Controls.Wpf.Controls"
                    xmlns:converters="clr-namespace:MediaFinder.Controls.Wpf.Converters"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <materialDesign:NullableToVisibilityConverter x:Key="NullToVisibilityConverter"
                                                NotNullValue="Visible"
                                                NullValue="Collapsed" />

  <converters:ZeroToBoolConverter x:Key="IsZeroConverter"
                                  FalseValue="False"
                                  TrueValue="True" />

  <converters:PercentageConverter x:Key="ProgressMaxSizeConverter" Percentage="60" />

  <Style x:Key="StatusOverlay" TargetType="{x:Type controls:StatusOverlay}">
    <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueForegroundBrush}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="OverlayBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:StatusOverlay}">
          <Grid x:Name="BaseGrid">
            <Border Background="{TemplateBinding OverlayBackground}" Opacity="0.56" />
            <materialDesign:Card Width="Auto"
                                 Height="Auto"
                                 Margin="8"
                                 Padding="8"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Background="{TemplateBinding Background}"
                                 Foreground="{TemplateBinding Foreground}"
                                 UniformCornerRadius="6">
              <DockPanel Margin="0,0,0,8"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center">
                <!-- TODO: Style Converter to switch circle (MaterialDesignCircularProgressBar) to linear (MaterialDesignLinearProgressBar) -->
                <!-- TODO: DockPanel.Dock Converter to switch circle to linear layout -->
                <ProgressBar Width="32"
                             Height="32"
                             Margin="0,0,8,0"
                             VerticalAlignment="Center"
                             DockPanel.Dock="Left"
                             Foreground="{TemplateBinding Foreground}"
                             IsIndeterminate="{TemplateBinding Progress, Converter={StaticResource IsZeroConverter}}"
                             Style="{StaticResource MaterialDesignCircularProgressBar}"
                             Value="{TemplateBinding Progress}" />

                <!-- TODO: DockPanel.Dock Converter to switch circle to linear layout -->
                <Button HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="{TemplateBinding CancelCommand}"
                        DockPanel.Dock="Bottom"
                        Style="{StaticResource MaterialDesignRaisedButton}"
                        Visibility="{TemplateBinding CancelCommand, Converter={StaticResource NullToVisibilityConverter}}">
                  <StackPanel Orientation="Horizontal">
                    <materialDesign:PackIcon Width="15"
                                             Height="15"
                                             Margin="0,2,8,0"
                                             Kind="Cancel" />
                    <TextBlock FontFamily="{TemplateBinding FontFamily}"
                               FontSize="{TemplateBinding FontSize}"
                               FontStretch="{TemplateBinding FontStretch}"
                               FontStyle="{TemplateBinding FontStyle}"
                               FontWeight="{TemplateBinding FontWeight}"
                               Text="Cancel" />
                  </StackPanel>
                </Button>

                <ContentPresenter Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
              </DockPanel>
            </materialDesign:Card>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsBusy" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BaseGrid"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0"
                                     To="1"
                                     Duration="0:0:0.3">
                      <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseInOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BaseGrid"
                                     Storyboard.TargetProperty="Opacity"
                                     From="1"
                                     To="0"
                                     Duration="0:0:0.3">
                      <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseInOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Panel.ZIndex" Value="-8192" />
        <Setter Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Panel.ZIndex" Value="8192" />
        <Setter Property="Visibility" Value="Visible" />
      </DataTrigger>
      <Trigger Property="IsBusy" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style TargetType="{x:Type controls:StatusOverlay}" BasedOn="{StaticResource StatusOverlay}" />
</ResourceDictionary>