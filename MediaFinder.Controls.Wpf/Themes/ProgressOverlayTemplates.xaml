<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:MediaFinder.Controls.Wpf.Controls"
                    xmlns:converters="clr-namespace:MediaFinder.Controls.Wpf.Converters"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
  </ResourceDictionary.MergedDictionaries>

  <materialDesign:NullableToVisibilityConverter x:Key="NullToVisibilityConverter"
                                                NotNullValue="Visible"
                                                NullValue="Collapsed" />

  <converters:ZeroToBoolConverter x:Key="IsZeroConverter"
                                  FalseValue="False"
                                  TrueValue="True" />

  <converters:PercentageConverter x:Key="ProgressMaxSizeConverter" Percentage="60" />

  <Style x:Key="MediaFinderCircularProgressBar"
         TargetType="{x:Type ProgressBar}"
         BasedOn="{StaticResource MaterialDesignCircularProgressBar}">
    <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}" />
  </Style>

  <Style x:Key="MediaFinderLinearProgressBar"
         TargetType="{x:Type ProgressBar}"
         BasedOn="{StaticResource MaterialDesignLinearProgressBar}">
    <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}" />
  </Style>

  <Style x:Key="ProgressOverlayCircular" TargetType="{x:Type controls:ProgressOverlay}">
    <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}" />
    <!--<Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          
        </DataTemplate>
      </Setter.Value>
    </Setter>-->
    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueForegroundBrush}" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="OverlayBackground" Value="{DynamicResource PrimaryHueMidBrush}" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:ProgressOverlay}">
          <Grid x:Name="BaseGrid">
            <Border HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{TemplateBinding OverlayBackground}"
                    Opacity="0.56" />
            <materialDesign:Card Width="Auto"
                                 Height="Auto"
                                 Margin="8"
                                 Padding="8"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Background="{TemplateBinding Background}"
                                 Foreground="{TemplateBinding Foreground}"
                                 UniformCornerRadius="6">
              <ContentControl Content="{TemplateBinding Content}"
                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                              ContentTemplate="{TemplateBinding ContentTemplate}"
                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
            </materialDesign:Card>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsBusy" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BaseGrid"
                                     Storyboard.TargetProperty="Opacity"
                                     From="0"
                                     To="1"
                                     Duration="0:0:0.3">
                      <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseInOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="BaseGrid"
                                     Storyboard.TargetProperty="Opacity"
                                     From="1"
                                     To="0"
                                     Duration="0:0:0.3">
                      <DoubleAnimation.EasingFunction>
                        <SineEase EasingMode="EaseInOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="VerticalAlignment" Value="Stretch" />
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="False">
        <Setter Property="Panel.ZIndex" Value="-8192" />
        <Setter Property="Visibility" Value="Collapsed" />
      </DataTrigger>
      <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Panel.ZIndex" Value="8192" />
        <Setter Property="Visibility" Value="Visible" />
      </DataTrigger>
      <Trigger Property="IsBusy" Value="True">
        <Trigger.EnterActions>
          <BeginStoryboard>
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.EnterActions>
        <Trigger.ExitActions>
          <BeginStoryboard>
            <Storyboard>
              <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
              </ObjectAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </Trigger.ExitActions>
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="ProgressOverlayLinear"
         TargetType="{x:Type controls:ProgressOverlay}"
         BasedOn="{StaticResource ProgressOverlayCircular}">
    <Setter Property="ContentTemplate">
      <Setter.Value>
        <DataTemplate>
          <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
            <TextBlock MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ProgressMaxSizeConverter}}"
                       MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ProgressMaxSizeConverter}}"
                       Margin="0,0,0,8"
                       HorizontalAlignment="Center"
                       FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                       FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                       FontStretch="{Binding Path=FontStretch, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                       FontStyle="{Binding Path=FontStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                       FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                       Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                       Text="{Binding Path=StatusMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                       TextTrimming="WordEllipsis"
                       TextWrapping="WrapWithOverflow"
                       Visibility="{Binding Path=StatusMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Converter={StaticResource StringIsEmptyVisibilityConverter}}" />
            <ProgressBar Height="8"
                         Margin="0,0,0,8"
                         HorizontalAlignment="Stretch"
                         VerticalAlignment="Center"
                         Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                         IsIndeterminate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Path=Progress, Converter={StaticResource IsZeroConverter}}"
                         Style="{StaticResource MediaFinderLinearProgressBar}"
                         Value="{Binding Path=Progress, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}" />
            <Button HorizontalAlignment="Center"
                    Command="{Binding Path=CancelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                    Style="{StaticResource MaterialDesignRaisedButton}"
                    Visibility="{Binding Path=CancelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Converter={StaticResource NullToVisibilityConverter}}">
              <StackPanel Orientation="Horizontal">
                <materialDesign:PackIcon Width="15"
                                         Height="15"
                                         Margin="0,1,8,0"
                                         Kind="Cancel" />
                <TextBlock FontFamily="{Binding Path=FontFamily, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                           FontSize="{Binding Path=FontSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                           FontStretch="{Binding Path=FontStretch, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                           FontStyle="{Binding Path=FontStyle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                           FontWeight="{Binding Path=FontWeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                           Text="Cancel" />
              </StackPanel>
            </Button>
          </StackPanel>
        </DataTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style TargetType="{x:Type controls:ProgressOverlay}" BasedOn="{StaticResource ProgressOverlayCircular}" />
</ResourceDictionary>