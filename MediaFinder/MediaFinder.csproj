<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>WinExe</OutputType>
    <TargetFramework>net8.0-windows</TargetFramework>

    <UseWPF>true</UseWPF>
    <StartupObject>MediaFinder.App</StartupObject>
    <ApplicationIcon>Resources\AppIcon.ico</ApplicationIcon>
  </PropertyGroup>

  <!--
  Uncomment to enable single file exe publishing
  https://learn.microsoft.com/dotnet/core/deploying/single-file/overview
  
  The Condition on PublishSingleFile is to prevent debugging issues while running as a single file.
  Many debugging tools (Snoop, Visual Studio's UI debugging tools for XAML) will not function with PublishSingleFile set to true.
  https://github.com/dotnet/runtime/issues/3773
  -->
  <PropertyGroup>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <PublishSingleFile Condition="'$(Configuration)' != 'Debug'">true</PublishSingleFile>
    <IncludeAllContentForSelfExtract>true</IncludeAllContentForSelfExtract>
    <IncludeNativeLibrariesForSelfExtract>true</IncludeNativeLibrariesForSelfExtract>
    <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>
    <SelfContained>true</SelfContained>
    <PublishDir>bin\Publish\$(Configuration)\$(TargetFramework)</PublishDir>
    <SatelliteResourceLanguages>en-US</SatelliteResourceLanguages>
  </PropertyGroup>

  <ItemGroup>
    <ApplicationDefinition Remove="App.xaml" />
    <Content Include="Resources\AppIcon.ico" />
    <Page Include="App.xaml" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommunityToolkit.Mvvm" />
    <PackageReference Include="JetBrains.Annotations" />
    <PackageReference Include="MaterialDesignExtensions" />
    <PackageReference Include="MaterialDesignThemes" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" />
    <PackageReference Include="Microsoft.Extensions.Hosting" />
    <PackageReference Include="Serilog" />
    <PackageReference Include="Serilog.Extensions.Hosting" />
    <PackageReference Include="Serilog.Extensions.Logging" />
    <PackageReference Include="Serilog.Settings.Configuration" />
    <PackageReference Include="Serilog.Sinks.Console" />
    <PackageReference Include="Serilog.Sinks.File" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\MediaFinder.Controls.Wpf\MediaFinder.Controls.Wpf.csproj" />
    <ProjectReference Include="..\MediaFinder.DataAccessLayer\MediaFinder.DataAccessLayer.csproj" />
    <ProjectReference Include="..\MediaFinder.DiscoveryServices\MediaFinder.DiscoveryServices.csproj" />
    <ProjectReference Include="..\MediaFinder.ExportServices\MediaFinder.ExportServices.csproj" />
    <ProjectReference Include="..\MediaFinder.Helpers\MediaFinder.Helpers.csproj" />
    <ProjectReference Include="..\MediaFinder.Models\MediaFinder.Models.csproj" />
  </ItemGroup>

  <!--
  This enables hardware acceleration to use GPU for rendering in RDP
  See: https://learn.microsoft.com/en-us/dotnet/desktop/wpf/advanced/optimizing-performance-taking-advantage-of-hardware?view=netframeworkdesktop-4.8
  See: https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-rc1/#wpf-hardware-acceleration-in-rdp
  -->
  <ItemGroup>
    <RuntimeHostConfigurationOption Include="Switch.System.Windows.Media.EnableHardwareAccelerationInRdp" Value="true" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="**\*ViewModel.cs">
      <DependentUpon>$([System.String]::Copy(%(Filename)).Replace('ViewModel', 'View.xaml'))</DependentUpon>
    </Compile>
    <Compile Update="**\MainWindowViewModel.cs">
      <DependentUpon>$([System.String]::Copy(%(Filename)).Replace('ViewModel', '.xaml'))</DependentUpon>
    </Compile>
  </ItemGroup>
  
  <ItemGroup>
    <None Remove="appsettings.json" />
    <Content Include="appsettings.json">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <None Update="appsettings.*.json">
      <DependentUpon>appsettings.json</DependentUpon>
    </None>
  </ItemGroup>
</Project>
