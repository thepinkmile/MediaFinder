<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MediaFinder_v2.Controls"
    xmlns:converters="clr-namespace:MediaFinder_v2.Converters"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:system="clr-namespace:System;assembly=System.Runtime">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ProgressBar.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <materialDesign:NullableToVisibilityConverter
        x:Key="NullToVisibilityConverter"
        NotNullValue="Visible"
        NullValue="Collapsed" />

    <converters:ZeroToBoolConverter
        x:Key="IsZeroConverter"
        FalseValue="False"
        TrueValue="True" />

    <converters:PercentageConverter x:Key="ProgressBarWidthConverter" Percentage="60" />
    <system:Double x:Key="MediaFinderProgressFontSize">20</system:Double>

    <Style
        x:Key="MediaFinderCircularProgressBar"
        BasedOn="{StaticResource MaterialDesignCircularProgressBar}"
        TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}" />
    </Style>

    <Style
        x:Key="MediaFinderLinearProgressBar"
        BasedOn="{StaticResource MaterialDesignLinearProgressBar}"
        TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}" />
    </Style>

    <Style x:Key="ProgressOverlayCircular" TargetType="{x:Type controls:ProgressOverlay}">
        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueForegroundBrush}" />
        <Setter Property="OverlayBackground" Value="{DynamicResource MaterialDesignDivider}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <StackPanel
                            Margin="0,0,0,8"
                            HorizontalAlignment="Center"
                            Orientation="Horizontal">
                            <ProgressBar
                                Width="32"
                                Height="32"
                                Margin="0,0,8,0"
                                VerticalAlignment="Center"
                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                                IsIndeterminate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Path=Progress, Converter={StaticResource IsZeroConverter}}"
                                Style="{StaticResource MediaFinderCircularProgressBar}"
                                Value="{Binding Path=Progress, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}" />
                            <TextBlock
                                MaxWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource ProgressBarWidthConverter}}"
                                VerticalAlignment="Center"
                                FontSize="{StaticResource MediaFinderProgressFontSize}"
                                Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                                Text="{Binding Path=StatusMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                                TextWrapping="Wrap"
                                Visibility="{Binding Path=StatusMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Converter={StaticResource StringIsEmptyVisibilityConverter}}" />
                        </StackPanel>
                        <Button
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Command="{Binding Path=CancelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                            Content="Cancel"
                            Visibility="{Binding Path=CancelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Converter={StaticResource NullToVisibilityConverter}}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:ProgressOverlay}">
                    <Grid
                        x:Name="BaseGrid"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                        <Border
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding OverlayBackground}"
                            Opacity="0.8" />
                        <materialDesign:Card
                            Width="Auto"
                            Height="Auto"
                            Margin="15"
                            Padding="15"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            UniformCornerRadius="6">
                            <ContentControl
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                        </materialDesign:Card>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsBusy" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BaseGrid"
                                            Storyboard.TargetProperty="Opacity"
                                            From="0"
                                            To="1"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="BaseGrid"
                                            Storyboard.TargetProperty="Opacity"
                                            From="1"
                                            To="0"
                                            Duration="0:0:0.3">
                                            <DoubleAnimation.EasingFunction>
                                                <SineEase EasingMode="EaseInOut" />
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
                <Setter Property="Panel.ZIndex" Value="-8192" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsBusy, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="Panel.ZIndex" Value="8192" />
            </DataTrigger>
            <Trigger Property="IsBusy" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames BeginTime="0:0:0.0" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ProgressOverlayLinear"
        BasedOn="{StaticResource ProgressOverlayCircular}"
        TargetType="{x:Type controls:ProgressOverlay}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock
                            Margin="0,0,0,8"
                            HorizontalAlignment="Center"
                            FontSize="{StaticResource MediaFinderProgressFontSize}"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                            Text="{Binding Path=StatusMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                            TextWrapping="Wrap"
                            Visibility="{Binding Path=StatusMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Converter={StaticResource StringIsEmptyVisibilityConverter}}" />
                        <ProgressBar
                            Height="8"
                            Margin="0,0,0,8"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Center"
                            Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                            IsIndeterminate="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Path=Progress, Converter={StaticResource IsZeroConverter}}"
                            Style="{StaticResource MediaFinderLinearProgressBar}"
                            Value="{Binding Path=Progress, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}" />
                        <Button
                            Command="{Binding Path=CancelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}}"
                            Content="Cancel"
                            Visibility="{Binding Path=CancelCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:ProgressOverlay}}, Converter={StaticResource NullToVisibilityConverter}}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource ProgressOverlayCircular}" TargetType="{x:Type controls:ProgressOverlay}" />
</ResourceDictionary>